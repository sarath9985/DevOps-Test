---
- name: create download directory
  file:
    state: directory
    mode: 'u=rwx,go=rx'
    dest: '{{ minikube_download_dir }}'

- name: download sha256sum
  get_url:
    url: '{{ minikube_mirror }}/{{ minikube_redis_filename }}.sha256'
    dest: '{{ minikube_download_dir }}/{{ minikube_download_filename }}.sha256'
    force: no
    use_proxy: yes
    validate_certs: yes
    mode: 'u=rw,go=r'

- name: read sha256sum
  slurp:
    src: '{{ minikube_download_dir }}/{{ minikube_download_filename }}.sha256'
  register: minikube_sha256sum

- name: download Minikube
  get_url:
    url: '{{ minikube_mirror }}/{{ minikube_redis_filename }}'
    dest: '{{ minikube_download_dir }}/{{ minikube_download_filename }}'
    sha256sum: '{{ minikube_sha256sum.content | b64decode | trim }}'
    force: no
    use_proxy: yes
    validate_certs: yes
    mode: 'u=rw,go=r'

- name: create the Minikube installation dir
  become: yes
  file:
    state: directory
    owner: root
    group: root
    mode: 'u=rwx,go=rx'
    dest: '{{ minikube_install_dir }}'

- name: install Minikube
  become: yes
  copy:
    src: '{{ minikube_download_dir }}/{{ minikube_download_filename }}'
    remote_src: yes
    dest: '{{ minikube_install_path }}'
    force: yes
    owner: root
    group: root
    mode: 'u=rwx,go=rx'

- name: Download kubectl binary
  get_url:
    url: "https://storage.googleapis.com/kubernetes-release/release/v{{ kubectl_version }}/bin/{{ kubectl_os }}/{{ kubectl_arch }}/kubectl"
    checksum: "{{ kubectl_checksum_binary }}"
    dest: "{{ kubectl_tmp_directory }}"

- name: execute permissions to kubectl
  copy:
    src: "{{ kubectl_tmp_directory }}/{{ item }}"  
    dest: "{{ kubectl_bin_directory }}/{{ item }}"
    mode: "{{ kubectl_binary_mode }}"
    owner: "{{ kubectl_owner }}"
    group: "{{ kubectl_group }}"
    remote_src: yes
  with_items:
    - kubectl    

- name: docker permssions to ubuntu user
  user:
    name: "{{ username }}"
    shell: /bin/bash
    groups: docker
    append: yes

- name: install conntrack for minikube
  apt: 
    name: conntrack 
    state: latest

- name: start minikube
  command: minikube start --vm-driver=none
  become: no

- name: install openshift module for k8s
  pip: 
    name: openshift

- name: Copy the deployment.yml to server
  copy:
    src: deployment.yml
    dest: /tmp/deployment.yml

- name: create deployment for devops-test app
  community.kubernetes.k8s:
    state: present
    src: /tmp/deployment.yml
  become: no  

